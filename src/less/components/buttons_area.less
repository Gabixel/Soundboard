@import "../utils/functions";
@import "../utils/variables";

#buttons-area {
	flex-grow: 2;
	flex-basis: 0;
	.set-radius(@main-radius);
	.hide-overflow();

	margin-bottom: 10px;

	background-image: linear-gradient(
		var(--window-bg) 50%,
		var(--buttons-grid-bg) 50%
	);

	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: flex-start;

	#buttons-collections-controls {
		// TODO: make toolbar tab item logic re-useable
		@margin: 3px;
		@button-inner-gap: 10px;
		margin: @margin (@main-radius + 1px) 0;

		display: flex;
		flex-direction: row;
		justify-content: flex-start;
		align-items: flex-start;

		overflow: hidden;

		max-width: -webkit-fill-available;

		#buttons-collections {
			display: flex;
			flex-direction: row;
			justify-content: flex-start;
			align-items: flex-start;

			overflow-x: auto;
			white-space: nowrap;

			&::-webkit-scrollbar {
				display: none;
			}

			// TODO: apply only when childrens are overflowing
			// + split in "overflow-left" and "overflow-right" classes
			-webkit-mask-image: linear-gradient(
				to right,
				#00000000 0%,
				#ffffff 3%,
				97%,
				#00000000 100%
			);
		}

		button.tab-button {
			margin: 0;
			padding: (@margin + 1) @button-inner-gap (@margin - 1);
			.set-radius(@main-radius @main-radius 0 0);

			background-color: transparent;
			color: var(--window-fg);

			&:hover {
				@color-opacity: 0.1;
				background-image: linear-gradient(
						to bottom,
						rgba(0, 0, 0, @color-opacity),
						rgba(0, 0, 0, @color-opacity)
					),
					linear-gradient(to bottom, var(--buttons-grid-bg), var(--buttons-grid-bg));
			}

			&.selected {
				background-image: none;
				background-color: var(--buttons-grid-bg);
			}
		}

		button#add-collection-button {
			margin-left: @margin * 2;
		}
	}

	#buttons-grids {
		flex-grow: 1;
		width: 100%;

		.buttons-grid {
			width: 100%;
			height: 100%;

			background-color: var(--buttons-grid-bg);
			.set-radius(@main-radius);
			.hide-overflow();

			@grid-gap: 8px;
			display: grid;
			gap: @grid-gap;
			padding: @grid-gap;

			grid-template-rows: repeat(var(--rows), 1fr);
			grid-template-columns: repeat(var(--columns), 1fr);

			&.has-dragging-child {
				&,
				& .soundbutton {
					cursor: grabbing;
				}
			}
		}
	}
}
